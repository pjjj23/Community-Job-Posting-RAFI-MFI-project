openapi: 3.0.0
info:
  title: Alay Trabaho API - Users
  description: API for managing users in the Alay Trabaho application.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
paths:
  /Users:
    get:
      summary: Get all users
      description: Retrieve a list of all users, excluding their passwords.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ProfileID:
                      type: integer
                    FirstName:
                      type: string
                    LastName:
                      type: string
                    Email:
                      type: string
                    ContactNumber:
                      type: string
                    Role:
                      type: string
                    Birthday:
                      type: string
                      format: date
                    Address:
                      type: string
                    Description:
                      type: string
                    ProfilePicture:
                      type: string
                    UserStatusID:
                      type: integer
    post:
      summary: Register a user
      description: Register a new user by providing necessary details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FirstName:
                  type: string
                LastName:
                  type: string
                Email:
                  type: string
                ContactNumber:
                  type: string
                Role:
                  type: string
                Birthday:
                  type: string
                  format: date
                Address:
                  type: string
                Description:
                  type: string
                ProfilePicture:
                  type: string
                Password:
                  type: string
                UserStatusID:
                  type: integer
              required:
                - FirstName
                - LastName
                - Email
                - Password
      responses:
        '200':
          description: User registered successfully.
        '400':
          description: Validation error or email already exists.
  /Users/{id}:
    get:
      summary: Get a specific user
      description: Retrieve details of a specific user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details.
        '404':
          description: User not found.
    put:
      summary: Update a specific user
      description: Update a user's information by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FirstName:
                  type: string
                MiddleName:
                  type: string
                LastName:
                  type: string
                Email:
                  type: string
                ContactNumber:
                  type: string
                Role:
                  type: string
                Birthday:
                  type: string
                  format: date
                Address:
                  type: string
                Description:
                  type: string
                ProfilePicture:
                  type: string
                Password:
                  type: string
                UserStatusID:
                  type: integer
      responses:
        '204':
          description: User updated successfully.
        '400':
          description: User ID mismatch or validation error.
        '404':
          description: User not found.
    delete:
      summary: Delete a user
      description: Delete a user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully.
        '404':
          description: User not found.
  /Users/Login:
    post:
      summary: Login
      description: Authenticate a user using their email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Email:
                  type: string
                Password:
                  type: string
              required:
                - Email
                - Password
      responses:
        '200':
          description: Login successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    type: object
                    properties:
                      ProfileID:
                        type: integer
                      FirstName:
                        type: string
                      LastName:
                        type: string
                      Email:
                        type: string
                      Role:
                        type: string
        '401':
          description: Invalid email or password.
        '400':
          description: Validation error.
